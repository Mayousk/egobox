name: pytests

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:

  pytest:
    name: python${{ matrix.python-version }}-${{ matrix.platform.python-architecture }} ${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      max-parallel: 16
      matrix:
        python-version: [3.7, 3.8, 3.9]
        platform: [
          { os: "ubuntu-latest", python-architecture: "x64", rust-target: "x86_64-unknown-linux-gnu" },
          # { os: "windows-latest", python-architecture: "x64", rust-target: "x86_64-pc-windows-msvc" },
       ]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      - run: rustup set default-host ${{ matrix.platform.rust-target }}

      - name: Install ubuntu packages
        run: sudo apt-get install libssl-dev gfortran libopenblas-dev liblapack-dev liblapacke-dev libatlas-base-dev

      - name: Build with default features
        run: cargo build --verbose
        env:
          RUSTFLAGS: -C link-arg=-llapacke -C link-arg=-lcblas

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin numpy pytest poetry

      - name: Test Python
        run: |
            poetry install
            poetry run maturin develop
            poetry run pytest
        shell: bash
        env:
          RUSTFLAGS: -C link-arg=-llapacke -C link-arg=-lcblas

    env:
      RUST_BACKTRACE: 1
